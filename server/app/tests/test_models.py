from django.test import TestCase\nfrom .models import Job, JobApplication\n\nclass JobModelTest(TestCase):\n    @classmethod\n    def setUpTestData(cls):\n        Job.objects.create(employer_id=1, title='Software Engineer', description='Develop software.', location='Remote')\n\n    def test_job_content(self):\n        job = Job.objects.get(id=1)\n        expected_object_name = f'{job.title}'\n        self.assertEqual(expected_object_name, 'Software Engineer')\n        self.assertEqual(job.description, 'Develop software.')\n        self.assertEqual(job.location, 'Remote')\n        self.assertEqual(job.employer_id, 1)\n\n    def test_job_string_representation(self):\n        job = Job.objects.get(id=1)\n        self.assertEqual(str(job), 'Software Engineer')\n\nclass JobApplicationModelTest(TestCase):\n    @classmethod\n    def setUpTestData(cls):\n        job = Job.objects.create(employer_id=1, title='Software Engineer', description='Develop software.', location='Remote')\n        JobApplication.objects.create(job=job, seeker_id=1)\n\n    def test_application_content(self):\n        application = JobApplication.objects.get(id=1)\n        self.assertEqual(application.seeker_id, 1)\n        self.assertEqual(application.job.title, 'Software Engineer')\n        self.assertEqual(application.status, 'applied')\n\n    def test_application_string_representation(self):\n        application = JobApplication.objects.get(id=1)\n        self.assertEqual(str(application), 'Application for Software Engineer by seeker 1')