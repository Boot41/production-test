from django.shortcuts import get_object_or_404\nfrom rest_framework import status\nfrom rest_framework.decorators import api_view\nfrom rest_framework.response import Response\nfrom .models import Job\nfrom .serializers import JobSerializer\n\n@api_view(['POST'])\ndef create_job(request):\n    serializer = JobSerializer(data=request.data)\n    if serializer.is_valid():\n        job = serializer.save()\n        return Response(JobSerializer(job).data, status=status.HTTP_201_CREATED)\n    return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)\n\n@api_view(['GET'])\ndef list_jobs(request, employer_id):\n    jobs = Job.objects.filter(employer_id=employer_id)\n    serializer = JobSerializer(jobs, many=True)\n    return Response(serializer.data, status=status.HTTP_200_OK)\n\n@api_view(['PUT'])\ndef update_job(request, job_id):\n    job = get_object_or_404(Job, id=job_id)\n    serializer = JobSerializer(job, data=request.data, partial=True)\n    if serializer.is_valid():\n        job = serializer.save()\n        return Response(JobSerializer(job).data, status=status.HTTP_200_OK)\n    return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)\n\n@api_view(['DELETE'])\ndef delete_job(request, job_id):\n    job = get_object_or_404(Job, id=job_id)\n    job.delete()\n    return Response(status=status.HTTP_204_NO_CONTENT)